<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  
		  creationComplete="created(event)">
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			import flash.filters.BitmapFilterType;
			
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			import spark.filters.BevelFilter;
			import spark.filters.DropShadowFilter;
			import spark.filters.GlowFilter;
			
			public function created(event:FlexEvent=null):void
			{
				this.addEventListener( Event.INIT, init);
				init();
			}
			public function init(event:Event=null):void
			{
				var bf:spark.filters.BevelFilter = new spark.filters.BevelFilter();
				bf.angle = 45;
				bf.blurX = bf.blurY = 5;
				bf.distance = 3;
				bf.strength = 1;
				bf.quality = BitmapFilterQuality.HIGH;
				bf.type = BitmapFilterType.INNER;
				var df:spark.filters.DropShadowFilter = new spark.filters.DropShadowFilter();
				df.angle = 180;
				df.blurX = bf.blurY = 5;
				df.distance = 5;
				df.strength = .22;
				df.quality = BitmapFilterQuality.HIGH;				
				df.color = 0x000000;
				var gf:spark.filters.GlowFilter = new spark.filters.GlowFilter();
				gf.blurX = bf.blurY = 10;
				gf.strength = 1;
				gf.quality = BitmapFilterQuality.HIGH;				
				gf.color = 0x000000;

				bg.filters = [bf, df, gf];
			}
			[Bindable]
			public var label:String ="";
			
							
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
	</fx:Style>
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
		
	</s:states>
	<s:Rect id="bg" radiusX="20" radiusY="20" width="344" height="108">
		<s:filters>
			
		</s:filters>
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry color="0x00BCED" />
				<s:GradientEntry color="0x00BCED" />
				<s:GradientEntry color="0x0085AA" />				
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Label id="labelDisplay" styleName="sideButton"
			 textAlign="center" fontSize="68" fontFamily="StandardRegular" color="0xffffff" 
			 maxDisplayedLines="1"
			 horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
			 left="10" right="10" top="2" bottom="2" text="{label}">
		
	</s:Label>
	
</s:Group>
