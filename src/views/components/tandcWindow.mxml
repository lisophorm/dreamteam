<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/10/23/displaying-a-popup-spark-titlewindow-container-in-flex-4/ -->
<s:TitleWindow name="tandcWindow"
			   xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/halo"
			   title="TERMS AND CONDITIONS"
			   width="790" height="550"
			   close="ttlWndw_close(event);" 
			   added="onAdded()"  
			   remove="exit();" xmlns:controls="com.flexcapacitor.controls.*" skinClass="skins.barTitleWindow" >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import model.ML;
			
			protected var isremoving:Boolean = false;
			
			[Bindable]
			public var exitFunction:Function = null;
			
			protected function onAdded(e:FlexEvent=null):void
			{
				
				//
				
				
				
				isremoving = false;
			}
			protected function exit(e:FlexEvent=null):void
			{
				isremoving = true;
				if (exitFunction!=null)
					exitFunction();
				
			}
			public function get isRemoving():Boolean
			{
				return isremoving;
			}
		]]>
	</fx:Script>
	<controls:WebView id="tec" width="{this.width-40}" height="{gruosso.height-100}" addedToStage="ta_addedToStageHandler(event)" />
	
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center" id="gruosso" verticalAlign="bottom">
		
		
		<s:Button id="gino" label="Close" click="PopUpManager.removePopUp(this);"/>
		<s:Spacer height="10" id="spazioGiu"  />
	</s:VGroup>
	<fx:Metadata>
		[Event(name="showTerms", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.utils.setInterval;
			import flashx.textLayout.conversion.*;
			import flashx.textLayout.elements.*;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import spark.utils.TextFlowUtil;
			
			protected var tcRequest:URLRequest;
			protected var tcLoader:URLLoader = new URLLoader();
			public var initialUrl:String;
			protected var webView:StageWebView;
			
			
			
			protected function ttlWndw_close(evt:CloseEvent):void {
				//myStage.visible=false;
				//myStage.viewPort = new Rectangle(100,100,100,100);
				//myStage.dispose();
				//myStage = null;
				PopUpManager.removePopUp(evt.currentTarget as IFlexDisplayObject);
			}
			
			protected function ta_addedToStageHandler(event:Event):void
			{
				//var pt:Point = new Point(event.localX, event.localY);
				
				setInterval(resizza,300);
				
				var pt:Point = event.target.parent.localToGlobal(new Point());
				//var locazia:Point=gino.contentToGlobal(new Point());
				//trace("converso x:"+locazia.x+" y:"+locazia.y+" t:"+pt.x);
				// This copies a single file into a subdir of appStorageDir
				
				try
				{
					var source:File = File.applicationDirectory.resolvePath("assets/html/tandc.html"); 
					// create file(s) in a subdir of appStorageDir to simplify cleanup
					var destination:File = File.applicationStorageDirectory.resolvePath("assets/html/tandc.html");
					// now do the copy and create a ref to our HTML file that a browser will understand
					source.copyTo(destination, true);   
					initialUrl = "file://" + destination.nativePath ;
					trace("terms added to stage");
					
				} catch (error:Error)
				{
					trace("Warning: "+error.message.toString());
				}
				
				tec.x=(stage.width-this.width)/2+18;
				tec.y=(stage.height-this.height)/2;
				tec.source=initialUrl;
			}
			protected function resizza():void {
				trace("resizza altro");
				//var eventObject:Event = new Event ("showTerms");
				//dispatchEvent(eventObject); 9
			}
			
			
		]]>
	</fx:Script>
	
</s:TitleWindow>